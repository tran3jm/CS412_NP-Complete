PROBLEM:
Vertex covering -- returning the minimum number of vertexes it takes to cover every edge in the undirected and unweighted graph

BOUNDS:
This approximate algorithm returns a vertex cover that is less than or equal to two times the exact min vertex cover
PROOF:
https://www.personal.kent.edu/~rmuhamma/Algorithms/MyAlgorithms/AproxAlgor/vertexCover.htm

INPUT:
First line = n = the number of inputs
n lines = the vertex as an integer 0...n-1 followed by each vertex connected to it
example:

OUTPUT:
one of the possible solutions
OR 
There are no edges.

INPUT:
4
0 1 2 3
1 0 2
2 0 1
3 0

OUTPUT:
0 1

INPUT:
3
0
1
2

OUTPUT:
There are no edges.

Adapted from geeksforgeeks:
https://www.geeksforgeeks.org/vertex-cover-problem-set-1-introduction-approximate-algorithm-2/

1) Initialize the result as {}
2) Consider a set of all edges in given graph.  Let the set be E.
3) Do following while E is not empty
...a) Pick an arbitrary edge (u, v) from set E and add 'u' and 'v' to result
...b) Remove all edges from E which are either incident on u or v.
4) Return result 

